// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/restaurants/{name}": {
            "get": {
                "description": "경로 파라미터로 받은 식당 이름과 쿼리로 받은 날짜를 기준으로 주간 식단을 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meals"
                ],
                "summary": "특정 식당의 주간 식단 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "레스토랑 이름 (e.g., restaurant_1, restaurant_2)",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "조회할 날짜 (YYYY-MM-DD 형식)",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "성공적으로 식단 정보 조회",
                        "schema": {
                            "$ref": "#/definitions/models.RestaurantMealsResponse"
                        }
                    },
                    "400": {
                        "description": "잘못된 요청 파라미터 (식당 이름 또는 날짜 형식 오류)",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "해당 식당 또는 해당 날짜의 식단 정보를 찾을 수 없음",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "서버 내부 오류 발생",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload/excel": {
            "post": {
                "description": "파일을 업로드 해서 식단 데이터를 디비에 저장한다.",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "excel"
                ],
                "summary": "엑셀 처리 API",
                "parameters": [
                    {
                        "type": "file",
                        "description": "한국어 엑셀 파일",
                        "name": "excel_ko",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "영어 엑셀 파일",
                        "name": "excel_en",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel file processed successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.DualExcelProcessResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to process Excel file",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.DualExcelProcessResponse": {
            "type": "object",
            "properties": {
                "result_en": {
                    "$ref": "#/definitions/models.ExcelProcessResult"
                },
                "result_ko": {
                    "$ref": "#/definitions/models.ExcelProcessResult"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.DayMeals": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "day_of_week": {
                    "type": "string"
                },
                "meals": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.MealInfo"
                    }
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Failed to process Excel file: file not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.ExcelProcessResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "restaurant_type": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "total_meals": {
                    "type": "integer"
                },
                "total_menu_items": {
                    "type": "integer"
                },
                "week_id": {
                    "type": "string"
                },
                "week_start_date": {
                    "type": "string"
                }
            }
        },
        "models.MealInfo": {
            "type": "object",
            "properties": {
                "meal_id": {
                    "type": "string"
                },
                "meal_type": {
                    "type": "string"
                },
                "menu_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MenuItemResponse"
                    }
                }
            }
        },
        "models.MealsSummary": {
            "type": "object",
            "properties": {
                "total_days": {
                    "type": "integer"
                },
                "total_meals": {
                    "type": "integer"
                },
                "total_menu_items": {
                    "type": "integer"
                }
            }
        },
        "models.MenuItemResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "name_en": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.RestaurantMealsData": {
            "type": "object",
            "properties": {
                "meals_by_day": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DayMeals"
                    }
                },
                "restaurant": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/models.MealsSummary"
                },
                "week": {
                    "$ref": "#/definitions/models.WeekInfo"
                }
            }
        },
        "models.RestaurantMealsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/models.RestaurantMealsData"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.WeekInfo": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "Grrrrr API",
	Description:      "The server for Grrrrr application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
